<?xml version="1.0"?>
<objects>
<!-- ('', 'zport', 'dmd', 'Devices', 'Server', 'libvirtHost') -->
<object id='/zport/dmd/Devices/Server/libvirtHost' module='Products.ZenModel.DeviceClass' class='DeviceClass'>
<object id='QEMU' module='Products.ZenModel.DeviceClass' class='DeviceClass'>
<property type="string" id="description" mode="w" >
libvirt API based monitoring of virtualization servers for QEMU

This uses SSH for monitoring by default.
You will want to set the Username:
zLibvirtUsername=zenoss (default)
You will also need a passwordless ssh key installed on the virtualization host for that user.
</property>
<property visible="True" type="string" id="zLibvirtConnectType" >
qemu+ssh://
</property>
</object>
<object id='KVM' module='Products.ZenModel.DeviceClass' class='DeviceClass'>
<property type="string" id="description" mode="w" >
libvirt API based monitoring of virtualization servers for KVM

This uses SSH for monitoring by default.
You will want to set the Username:
zLibvirtUsername=zenoss (default)
You will also need a passwordless ssh key installed on the virtualization host for that user.
</property>
<property visible="True" type="string" id="zLibvirtConnectType" >
qemu+ssh://
</property>
</object>
<object id='XEN' module='Products.ZenModel.DeviceClass' class='DeviceClass'>
<property type="string" id="description" mode="w" >
libvirt API based monitoring of virtualization servers for XEN

(This libvirt driver has not yet been tested with this zenpack, but the support is here for it.)
</property>
<property visible="True" type="string" id="zLibvirtConnectType" >
xen+ssh://
</property>
</object>
<object id='ESX' module='Products.ZenModel.DeviceClass' class='DeviceClass'>
<property visible="True" type="string" id="zLibvirtConnectType" >
esx://
</property>
<property type="string" id="description" mode="w" >
libvirt API based monitoring of virtualization servers for ESX

(Note that this requires at least libvirt 0.7.0 and ESX compiled in [--with-esx])

Some settings For ESX:
zLibvirtConnectType=esx://
zLibvirtUsername
zLibvirtPassword

The libvirt API uses HTTPS to talk directly to the ESX host itself.   You will need
a working username/password pair to query the ESX host.
</property>
<property visible="True" type="string" id="zLibvirtUsername" >
root
</property>
<property visible="True" type="string" id="zLibvirtPassword" >
password
</property>
</object>
<object id='OpenVZ' module='Products.ZenModel.DeviceClass' class='DeviceClass'>
<property visible="True" type="string" id="zLibvirtConnectType" >
openvz://
</property>
<property type="string" id="description" mode="w" >
libvirt API based monitoring of virtualization servers for OpenVZ

(This libvirt driver has not yet been tested with this zenpack, but the support is here for it.)
</property>
</object>
<object id='OpenNebula' module='Products.ZenModel.DeviceClass' class='DeviceClass'>
<property visible="True" type="string" id="zLibvirtConnectType" >
opennebula://
</property>
<property type="string" id="description" mode="w" >
libvirt API based monitoring of virtualization servers for OpenNebula

(This libvirt driver has not yet been tested with this zenpack, but the support is here for it.)
</property>
</object>
<object id='VirtualBox' module='Products.ZenModel.DeviceClass' class='DeviceClass'>
<property type="string" id="description" mode="w" >
libvirt API based monitoring of virtualization servers for VirtualBox

(This libvirt driver has not yet been tested with this zenpack, but the support is here for it.)
</property>
<property visible="True" type="string" id="zLibvirtConnectType" >
vbox://
</property>
</object>
<object id='LXC' module='Products.ZenModel.DeviceClass' class='DeviceClass'>
<property type="string" id="description" mode="w" >
libvirt API based monitoring of virtualization servers for Linux Containers

(This libvirt driver has not yet been tested with this zenpack, but the support is here for it.)
</property>
<property visible="True" type="string" id="zLibvirtConnectType" >
lxc://
</property>
</object>
<object id='UML' module='Products.ZenModel.DeviceClass' class='DeviceClass'>
<property type="string" id="description" mode="w" >
libvirt API based monitoring of virtualization servers for User Mode Linux

(This libvirt driver has not yet been tested with this zenpack, but the support is here for it.)
</property>
<property visible="True" type="string" id="zLibvirtConnectType" >
uml://
</property>
</object>
<property type="string" id="description" mode="w" >
libvirt API based monitoring of virtualization servers (e.g. XEN, KVM, etc...)
You need libvirt installed along with the python API
This module is tested using ssh as a transport for the libvirt API, however it could
be made to use the other transports available (TLS/TCP/etc.).

The libvirt versions packaged with Redhat 5.4 (0.6.5) and Ubuntu 9.10 (libvirt 0.7.0) seem to work well.
Earlier 5.x versions of Redhat have very old versions of libvirt.  libvirt 0.7.5 has support
for memory stats, but is untested in this zenpack as of yet.

For QEMU/KVM/XEN (via ssh)
For KVM/QEMU/XEN over TLS: The support for the TLS method is in the check script, but has not been tested.
For ESX (via HTTPS): You will need a copy of libvirt 0.7.0 installed with ESX compiled in
For OpenVZ/Linux Containers/User Mode Linux/VirtualBox: Support is in the zenpack but Untested

You can set zLibvirtUsername and zLibvirtConnectType to customize access to the hosts, though
qemu+ssh:// is the default at the moment (which works for both QEMU and KVM)

See these docs for more details:
    http://libvirt.org/python.html
    http://libvirt.org/uri.html
    http://libvirt.org/remote.html
</property>
<property visible="True" type="string" id="zPythonClass" >
ZenPacks.community.libvirt.libvirtHost
</property>
<property visible="True" type="lines" id="zCollectorPlugins" >
['libvirtPlugin', 'zenoss.snmp.NewDeviceMap', 'zenoss.snmp.DeviceMap', 'zenoss.snmp.DellDeviceMap', 'zenoss.snmp.HPDeviceMap', 'zenoss.snmp.InterfaceMap', 'zenoss.snmp.RouteMap', 'zenoss.snmp.IpServiceMap', 'zenoss.snmp.HRFileSystemMap', 'zenoss.snmp.HRSWInstalledMap', 'zenoss.snmp.HRSWRunMap', 'zenoss.snmp.CpuMap', 'zenoss.snmp.DellCPUMap', 'zenoss.snmp.HPCPUMap', 'zenoss.snmp.DellPCIMap']
</property>
<property visible="True" type="string" id="zLibvirtUsername" >
zenoss
</property>
<property visible="True" type="boolean" id="zHPExpansionCardMapIgnorePci" >
True
</property>
<tomanycont id='rrdTemplates'>
<object id='libvirtGuest' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="text" id="description" mode="w" >
Template for monitoring Virtual Machines using the libvirt API
</property>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.community.libvirt.libvirtGuest
</property>
<tomanycont id='datasources'>
<object id='domainstats' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.community.libvirt/path}/libexec/check_libvirt.py -H ${here/libvirthost/manageIp} -u ${here/zLibvirtUsername} -c ${here/zLibvirtConnectType} -l domain -n ${here/lvDisplayName}
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='cputime' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
DERIVE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='disk_total_readbytes' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
DERIVE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='disk_total_readrequests' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
DERIVE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='disk_total_writebytes' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
DERIVE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='disk_total_writerequests' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
DERIVE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='if_total_rxbytes' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
DERIVE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='if_total_rxdrops' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
DERIVE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='if_total_rxerrs' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
DERIVE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='if_total_rxpackets' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
DERIVE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='if_total_txbytes' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
DERIVE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='if_total_txdrops' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
DERIVE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='if_total_txerrs' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
DERIVE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='if_total_txpackets' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
DERIVE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='memory' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='autostart' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='state' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='CPU' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<tomanycont id='graphPoints'>
<object id='cputime' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%ssecs
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
1024,/,1024,/
</property>
<property type="string" id="dpName" mode="w" >
domainstats_cputime
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='DiskBandwidth' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
True
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="text" id="custom" mode="w" >
AREA:disk_total_writebytes-rpn#0000ff99:disk_total_writebytes
GPRINT:disk_total_writebytes-raw:LAST:cur\:%5.2lf%s
GPRINT:disk_total_writebytes-raw:AVERAGE:avg\:%5.2lf%s
GPRINT:disk_total_writebytes-raw-max:MAX:max\:%5.2lf%s\j

</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
4
</property>
<tomanycont id='graphPoints'>
<object id='disk_total_readbytes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
domainstats_disk_total_readbytes
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='disk_total_writebytes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
DONTDRAW
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
-1,*
</property>
<property type="string" id="dpName" mode="w" >
domainstats_disk_total_writebytes
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='DiskRequests' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="text" id="custom" mode="w" >
AREA:disk_total_writerequests-rpn#0000ff99:disk_total_writerequests
GPRINT:disk_total_writerequests-raw:LAST:cur\:%5.2lf%s
GPRINT:disk_total_writerequests-raw:AVERAGE:avg\:%5.2lf%s
GPRINT:disk_total_writerequests-raw-max:MAX:max\:%5.2lf%s\j
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
5
</property>
<tomanycont id='graphPoints'>
<object id='disk_total_readrequests' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
domainstats_disk_total_readrequests
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='disk_total_writerequests' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
DONTDRAW
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
-1,*
</property>
<property type="string" id="dpName" mode="w" >
domainstats_disk_total_writerequests
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='InterfaceBandwidth' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
True
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="text" id="custom" mode="w" >
AREA:if_total_txbytes-rpn#0000ff99:if_total_txbytes
GPRINT:if_total_txbytes-raw:LAST:cur\:%5.2lf%s
GPRINT:if_total_txbytes-raw:AVERAGE:avg\:%5.2lf%s
GPRINT:if_total_txbytes-raw-max:MAX:max\:%5.2lf%s\j
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
2
</property>
<tomanycont id='graphPoints'>
<object id='if_total_rxbytes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
domainstats_if_total_rxbytes
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='if_total_txbytes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
DONTDRAW
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
-1,*
</property>
<property type="string" id="dpName" mode="w" >
domainstats_if_total_txbytes
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='InterfacePackets' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="text" id="custom" mode="w" >
AREA:if_total_txpackets-rpn#0000ff99:if_total_txpackets
GPRINT:if_total_txpackets-raw:LAST:cur\:%5.2lf%s
GPRINT:if_total_txpackets-raw:AVERAGE:avg\:%5.2lf%s
GPRINT:if_total_txpackets-raw-max:MAX:max\:%5.2lf%s\j
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
3
</property>
<tomanycont id='graphPoints'>
<object id='if_total_rxpackets' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
domainstats_if_total_rxpackets
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='if_total_txpackets' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
DONTDRAW
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
-1,*
</property>
<property type="string" id="dpName" mode="w" >
domainstats_if_total_txpackets
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Memory' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
True
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='memory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
1024,*
</property>
<property type="string" id="dpName" mode="w" >
domainstats_memory
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='libvirtPool' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.community.libvirt.libvirtPool
</property>
<tomanycont id='datasources'>
<object id='poolstats' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.community.libvirt/path}/libexec/check_libvirt.py -H ${here/libvirthost/manageIp} -u ${here/zLibvirtUsername} -c ${here/zLibvirtConnectType} -l pool -n ${here/lvDisplayName}
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='allocation' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='PoolSpace' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
True
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<tomanycont id='graphPoints'>
<object id='allocation' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
poolstats_allocation
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='libvirtVolume' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.community.libvirt.libvirtVolume
</property>
<tomanycont id='datasources'>
<object id='volumestats' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.community.libvirt/path}/libexec/check_libvirt.py -H ${here/libvirthost/manageIp} -u ${here/zLibvirtUsername} -c ${here/zLibvirtConnectType} -l volume -n ${here/lvPath}
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='allocation' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='VolumeSpace' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
True
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<tomanycont id='graphPoints'>
<object id='allocation' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
volumestats_allocation
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Reports', 'Device Reports', 'libvirtvirtualHostlist') -->
<object id='/zport/dmd/Reports/Device Reports/libvirtvirtualHostlist' module='Products.ZenModel.Report' class='Report'>
</object>
<!-- ('', 'zport', 'dmd', 'zenMenus', 'More', 'zenMenuItems', 'libvirtguestDetail') -->
<object id='/zport/dmd/zenMenus/More/zenMenuItems/libvirtguestDetail' module='Products.ZenModel.ZenMenuItem' class='ZenMenuItem'>
<property type="text" id="description" mode="w" >
Guests
</property>
<property type="text" id="action" mode="w" >
libvirtguestDetail
</property>
<property type="boolean" id="isglobal" mode="w" >
True
</property>
<property type="lines" id="permissions" mode="w" >
('View',)
</property>
<property type="lines" id="allowed_classes" mode="w" >
['libvirtHost']
</property>
<property type="boolean" id="isdialog" mode="w" >
False
</property>
<property type="float" id="ordering" mode="w" >
5.0
</property>
</object>
</objects>
